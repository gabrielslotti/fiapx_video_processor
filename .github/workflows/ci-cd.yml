name: CI/CD

on:
  push:
    branches: [ main ]

env:
  PYTHON_VERSION: "3.10"
  IMAGE_API: gcr.io/${{ secrets.GCP_PROJECT }}/video-processor-api
  IMAGE_WORKER: gcr.io/${{ secrets.GCP_PROJECT }}/video-processor-worker

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install UV and dependencies
      run: |
        python -m pip install --upgrade pip
        pip install uv
        uv sync --frozen --no-cache

    - name: Run tests with coverage
      run: |
        uv run pytest --cov-report xml:coverage.xml --cov=app

    - name: Upload coverage report
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        verbose: true
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: gabrielslotti/fiapx_video_processor

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Authenticate with Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT }}

    - name: Build & push API
      continue-on-error: true
      run: |
        gcloud builds submit . \
        --config .github/workflows/cloudbuild-api.yml \
        --substitutions=_IMAGE_API=${{ env.IMAGE_API }}

    - name: Build & push Worker
      continue-on-error: true
      run: |
        gcloud builds submit . \
        --config .github/workflows/cloudbuild-worker.yml \
        --substitutions=_IMAGE_WORKER=${{ env.IMAGE_WORKER }}

- name: Deploy API
  run: |
    echo '${{ secrets.APP_ENV_VARS }}' > base_vars.json
    jq '. + {"ACCESS_TOKEN_EXPIRE_MINUTES":"1440", "TASK_TIME_LIMIT":"3600", "WORKER_PREFETCH_MULTIPLIER":"1", "WORKER_MAX_TASKS_PER_CHILD":"100"}' base_vars.json > env_vars.json
    gcloud run deploy video-processor-api \
      --image ${{ env.IMAGE_API }} \
      --region ${{ secrets.CLOUD_RUN_REGION }} \
      --platform managed \
      --allow-unauthenticated \
      --timeout=300s \
      --env-vars-file env_vars.json
    rm base_vars.json env_vars.json

- name: Deploy Worker
  run: |
    echo '${{ secrets.APP_ENV_VARS }}' > base_vars.json
    jq '. + {"ACCESS_TOKEN_EXPIRE_MINUTES":"1440", "TASK_TIME_LIMIT":"3600", "WORKER_PREFETCH_MULTIPLIER":"1", "WORKER_MAX_TASKS_PER_CHILD":"100"}' base_vars.json > env_vars.json
    gcloud run deploy video-processor-worker \
      --image ${{ env.IMAGE_WORKER }} \
      --region ${{ secrets.CLOUD_RUN_REGION }} \
      --platform managed \
      --no-allow-unauthenticated \
      --concurrency 1 \
      --env-vars-file env_vars.json
    rm base_vars.json env_vars.json